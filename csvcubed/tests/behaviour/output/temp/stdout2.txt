Feature: Test outputting CSV-Ws with Qb flavouring. # features/qbwriter.feature:1

  Scenario: py3.10.4 (main, Apr  7 2022, 03:15:56) [GCC 10.2.1 20210110]A codelist defined in a CSV-W should be copied to the output directory  # features/qbwriter.feature:407
    Given the existing test-case file "qbwriter/code-list.csv-metadata.json"                                                                    # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/file.py:16
    And the existing test-case file "qbwriter/code-list.table.json"                                                                             # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/file.py:16
    And the existing test-case file "qbwriter/code-list.csv"                                                                                    # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/file.py:16
    And a QbCube named "Some Qube" with code-list defined in an existing CSV-W "qbwriter/code-list.csv-metadata.json"                           # features/steps/qbwriter.py:133
    Then the CSVqb should pass all validations                                                                                                  # features/steps/qbwriter.py:447
    When the cube is serialised to CSV-W                                                                                                        # features/steps/qbwriter.py:422
    Then the file at "code-list.csv-metadata.json" should exist                                                                                 # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/file.py:68
    And the file at "code-list.table.json" should exist                                                                                         # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/file.py:68
    And the file at "code-list.csv" should exist                                                                                                # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/file.py:68
    And csvlint validation of all CSV-Ws should succeed                                                                                         # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/csvlint.py:32
    And csv2rdf on all CSV-Ws should succeed                                                                                                    # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/csv2rdf.py:58
    And the RDF should pass "skos, qb" SPARQL tests                                                                                             # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/sparqltests.py:45
    And the RDF should contain                                                                                                                  # ../../../csvcubed-devtools/csvcubeddevtools/behaviour/rdf.py:31
      """
        <file:/tmp/some-qube.csv#structure> <http://purl.org/linked-data/cube#component> <file:/tmp/some-qube.csv#component/d-code-list>.
        <file:/tmp/some-qube.csv#component/d-code-list> <http://purl.org/linked-data/cube#dimension> <file:/tmp/some-qube.csv#dimension/d-code-list>.
        <file:/tmp/some-qube.csv#dimension/d-code-list> <http://purl.org/linked-data/cube#codeList> <http://gss-data.org.uk/def/trade/concept-scheme/age-of-business>.
      
        <file:/tmp/some-qube.csv#obs/a,10-20> <file:/tmp/some-qube.csv#dimension/d-code-list> <http://gss-data.org.uk/def/trade/concept/age-of-business/10-20>.
      
        <http://gss-data.org.uk/def/trade/concept-scheme/age-of-business> a <http://www.w3.org/2004/02/skos/core#ConceptScheme>.
        <http://gss-data.org.uk/def/trade/concept/age-of-business/10-20> a <http://www.w3.org/2004/02/skos/core#Concept>;
          <http://www.w3.org/2004/02/skos/core#inScheme> <http://gss-data.org.uk/def/trade/concept-scheme/age-of-business>.
      """

